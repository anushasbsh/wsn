#include "ns3/core-module.h"
#include "ns3/network-module.h"
#include "ns3/mobility-module.h"
#include "ns3/wifi-module.h"
#include "ns3/internet-module.h"
#include "ns3/applications-module.h"
using namespace ns3;

int main() {
    NodeContainer nodes;
    nodes.Create(10);

    MobilityHelper mobility;
    mobility.SetPositionAllocator("ns3::GridPositionAllocator", "MinX", DoubleValue(0.0), "MinY", DoubleValue(0.0),
                                  "DeltaX", DoubleValue(5.0), "DeltaY", DoubleValue(5.0), "GridWidth", UintegerValue(3));
    mobility.SetMobilityModel("ns3::ConstantPositionMobilityModel");
    mobility.Install(nodes);

    WifiHelper wifi;
    YansWifiPhyHelper phy = YansWifiPhyHelper::Default();
    phy.SetChannel(YansWifiChannelHelper::Default().Create());
    NetDeviceContainer devices = wifi.Install(phy, WifiMacHelper().SetType("ns3::AdhocWifiMac"), nodes);

    InternetStackHelper().Install(nodes);
    Ipv4InterfaceContainer interfaces = Ipv4AddressHelper("10.1.1.0", "255.255.255.0").Assign(devices);

    uint16_t port = 9;
    UdpEchoServerHelper echoServer(port);
    ApplicationContainer serverApp = echoServer.Install(nodes.Get(0));
    serverApp.Start(Seconds(1.0));
    serverApp.Stop(Seconds(10.0));

    UdpEchoClientHelper echoClient(interfaces.GetAddress(0), port);
    echoClient.SetAttribute("MaxPackets", UintegerValue(2));
    echoClient.SetAttribute("Interval", TimeValue(Seconds(1.0)));
    echoClient.SetAttribute("PacketSize", UintegerValue(1024));

    ApplicationContainer clientApp = echoClient.Install(nodes.Get(1));
    clientApp.Start(Seconds(2.0));
    clientApp.Stop(Seconds(10.0));

    Simulator::Run();
    Simulator::Destroy();
}

// UdpEchoServerApplication: Received 1024 bytes from 10.1.1.2
// At time 2s client sent 1024 bytes to 10.1.1.1
// At time 2s server received 1024 bytes from 10.1.1.2
// At time 3s client sent 1024 bytes to 10.1.1.1
// At time 3s server received 1024 bytes from 10.1.1.2
